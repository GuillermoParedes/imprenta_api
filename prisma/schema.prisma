generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMINISTRADOR
  VENDEDOR
}

enum OrderStatus {
  PENDIENTE
  ENTREGADO
  CANCELADO
}

enum ClientType {
  NATURAL
  JURIDICA
}

enum ClientRanking {
  BUENO
  MALO
}

model User {
  id           String    @id @default(cuid())
  first_name   String
  last_name    String
  username     String
  password     String?
  codeExpireAt DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  role         UserRole
  products     Product[] @relation("SellerProducts")

  Todo Todo[]
}

model Client {
  id         String        @id @default(cuid())
  first_name String
  last_name  String
  type       ClientType
  address    String
  cellphone  String
  order      Order[]
  ranking    ClientRanking
}

model Order {
  id           String      @id @default(cuid())
  customerId   String
  totalAmount  Float // esto seria el costo total de la sumatoria del precio de cadda producto
  dateShipping DateTime
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  status       OrderStatus
  customer     Client      @relation(fields: [customerId], references: [id])
  items        OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Product {
  id           String      @id @default(cuid())
  name         String
  description  String
  sellingPrice Float
  actualPrice  Float
  productImage String
  stock        Int
  sellerId     String
  categoryId   String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  seller       User        @relation("SellerProducts", fields: [sellerId], references: [id])
  category     Category    @relation(fields: [categoryId], references: [id])
  orderItems   OrderItem[]
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}


model Todo {
  id        Int     @id @default(autoincrement())
  title     String
  completed Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      User?    @relation(fields: [authorId], references: [id])
  authorId    String?
}